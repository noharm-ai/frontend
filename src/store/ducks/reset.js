import { Creators as ClinicalNotesCreators } from "./clinicalNotes";
import { Creators as DepartmentsCreators } from "./departments";
import { Creators as DrugsCreators } from "./drugs";
import { Creators as InterventionCreators } from "./intervention";
import { Creators as MemoryCreators } from "./memory";
import { Creators as OutliersCreators } from "./outliers";
import { Creators as PatientCentralCreators } from "./patientCentral";
import { Creators as PrescriptionDrugsCreators } from "./prescriptionDrugs";
import { Creators as PrescriptionsCreators } from "./prescriptions";

import { reset as adminMemoryReset } from "features/admin/Memory/MemorySlice";
import { reset as adminInterventionReasonsReset } from "features/admin/InterventionReason/InterventionReasonSlice";
import { reset as adminDrugAttributesReset } from "features/admin/DrugAttributes/DrugAttributesSlice";
import { reset as adminIntegrationReset } from "features/admin/Integration/IntegrationSlice";
import { reset as adminSegmentReset } from "features/admin/Segment/SegmentSlice";
import { reset as adminExamReset } from "features/admin/Exam/ExamSlice";
import { reset as adminFrequencyReset } from "features/admin/Frequency/FrequencySlice";
import { reset as adminUnitConversionReset } from "features/admin/UnitConversion/UnitConversionSlice";
import { reset as adminIntegrationStatusReset } from "features/admin/IntegrationStatus/IntegrationStatusSlice";
import { reset as adminIntegrationConfigReset } from "features/admin/IntegrationConfig/IntegrationConfigSlice";
import { reset as adminIntegrationRemoteReset } from "features/admin/IntegrationRemote/IntegrationRemoteSlice";
import { reset as adminSubstanceReset } from "features/admin/Substance/SubstanceSlice";

import { reset as drugFormStatusReset } from "features/drugs/DrugFormStatus/DrugFormStatusSlice";
import { reset as listsReset } from "features/lists/ListsSlice";
import { reset as memoryDraftReset } from "features/memory/MemoryDraft/MemoryDraftSlice";
import { reset as memoryFilterReset } from "features/memory/MemoryFilter/MemoryFilterSlice";
import { reset as serverActionsReset } from "features/serverActions/ServerActionsSlice";
import { reset as summaryReset } from "features/summary/SummarySlice";
import { reset as drugMeasureUnitsReset } from "features/drugs/DrugMeasureUnits/DrugMeasureUnitsSlice";
import { reset as scoreWizardReset } from "features/outliers/ScoreWizard/ScoreWizardSlice";
import { reset as prescriptionv2Reset } from "features/prescription/PrescriptionSlice";
import { reset as drugAttributesFormReset } from "features/drugs/DrugAttributesForm/DrugAttributesFormSlice";
import { reset as supportReset } from "features/support/SupportSlice";
import { reset as interventionOutcomeReset } from "features/intervention/InterventionOutcome/InterventionOutcomeSlice";
import { reset as userAdminReset } from "features/userAdmin/UserAdminSlice";

import { reset as reportsReset } from "features/reports/ReportsSlice";
import { reset as patientDayReportReset } from "features/reports/PatientDayReport/PatientDayReportSlice";
import { reset as prescriptionReportReset } from "features/reports/PrescriptionReport/PrescriptionReportSlice";
import { reset as interventionReportReset } from "features/reports/InterventionReport/InterventionReportSlice";
import { reset as prescriptionAuditReportReset } from "features/reports/PrescriptionAuditReport/PrescriptionAuditReportSlice";
import { reset as economyReportReset } from "features/reports/EconomyReport/EconomyReportSlice";
import { reset as cultureReportReset } from "features/reports/CultureReport/CultureReportSlice";
import { reset as antimicrobialHistoryReportReset } from "features/reports/AntimicrobialHistoryReport/AntimicrobialHistoryReportSlice";
import { reset as alertListReportReset } from "features/reports/AlertListReport/AlertListReportSlice";

const { clinicalNotesReset } = ClinicalNotesCreators;
const { departmentsReset } = DepartmentsCreators;
const { drugsReset } = DrugsCreators;
const { interventionReset } = InterventionCreators;
const { memoryReset } = MemoryCreators;
const { outliersReset } = OutliersCreators;
const { patientCentralReset } = PatientCentralCreators;
const { prescriptionDrugsReset } = PrescriptionDrugsCreators;
const { prescriptionsReset } = PrescriptionsCreators;

export const resetReduxState = (dispatch) => {
  dispatch(adminInterventionReasonsReset());
  dispatch(adminMemoryReset());
  dispatch(adminFrequencyReset());
  dispatch(adminDrugAttributesReset());
  dispatch(adminIntegrationReset());
  dispatch(adminSegmentReset());
  dispatch(adminExamReset());
  dispatch(adminFrequencyReset());
  dispatch(adminUnitConversionReset());
  dispatch(adminIntegrationStatusReset());
  dispatch(adminIntegrationConfigReset());
  dispatch(adminIntegrationRemoteReset());
  dispatch(adminSubstanceReset());

  dispatch(clinicalNotesReset());
  dispatch(departmentsReset());
  dispatch(drugsReset());
  dispatch(interventionReset());
  dispatch(memoryReset());
  dispatch(outliersReset());
  dispatch(patientCentralReset());
  dispatch(prescriptionDrugsReset());
  dispatch(prescriptionsReset());
  dispatch(reportsReset());
  dispatch(drugFormStatusReset());
  dispatch(listsReset());
  dispatch(memoryDraftReset());
  dispatch(memoryFilterReset());
  dispatch(serverActionsReset());
  dispatch(summaryReset());
  dispatch(drugMeasureUnitsReset());
  dispatch(scoreWizardReset());
  dispatch(prescriptionv2Reset());
  dispatch(drugAttributesFormReset());
  dispatch(supportReset());
  dispatch(interventionOutcomeReset());
  dispatch(userAdminReset());

  dispatch(reportsReset());
  dispatch(patientDayReportReset());
  dispatch(prescriptionReportReset());
  dispatch(interventionReportReset());
  dispatch(prescriptionAuditReportReset());
  dispatch(economyReportReset());
  dispatch(cultureReportReset());
  dispatch(antimicrobialHistoryReportReset());
  dispatch(alertListReportReset());
};
